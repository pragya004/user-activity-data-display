{"version":3,"sources":["Components/UserDisplay.js"],"names":["useStyles","makeStyles","theme","paper","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","alignItemsAndJustifyContent","display","alignItems","justifyContent","UserDisplay","userData","useState","singleUserData","setSingleUserData","currentID","setCurrentID","open","setOpen","classes","Date","selectedDate","setSelectedDate","todayDate","dateToday","toLocaleString","month","getDate","getFullYear","dateToDisplay","setDateToDisplay","arr","getOneUserData","idx","dateComp","dateToCompare","map","item","id","activity_periods","dateTypeStart","start_time","typeDateStart","dateTypeEnd","end_time","a","toLocaleTimeString","replace","b","push","useEffect","getTime","console","log","dateToSend","style","component","Paper","aria-label","color","fontSize","row","hover","onClick","real_name","label","tz","onClose","aria-labelledby","aria-describedby","className","outline","fontFamily","lineHeight","fontWeight","paddingTop","ml","mr","utils","DateFnsUtils","margin","format","value","onChange","date","KeyboardButtonProps","length","mb","table","align"],"mappings":"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","file":"static/js/4.4174e710.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { makeStyles,Chip, Box, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Modal, Container } from '@material-ui/core'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\r\n\r\n\r\nconst useStyles = makeStyles(theme => (\r\n    {\r\n        paper: {\r\n            width: 300,\r\n            backgroundColor: theme.palette.background.paper,\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n        alignItemsAndJustifyContent: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n    }));\r\n\r\n  export default function UserDisplay({userData}) {\r\n      \r\n    const [singleUserData, setSingleUserData] = useState(null)\r\n    const [currentID, setCurrentID] = useState(null)\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useStyles();    \r\n    \r\n    //settng the date selected by user in calendar\r\n    const [selectedDate, setSelectedDate] = useState(new Date());\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    \r\n\r\n    //getting today's date and converting it to usable format\r\n    const todayDate = new Date();\r\n    const dateToday = `${todayDate.toLocaleString('default', { month: 'short' })} ${todayDate.getDate()} ${todayDate.getFullYear()}`\r\n    const [dateToDisplay, setDateToDisplay] = useState(dateToday)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    \r\n    const handleClose = () => {\r\n       setOpen(false);\r\n    }\r\n\r\n\r\n    let arr = []\r\n    function getOneUserData(idx,dateComp){\r\n        setDateToDisplay(dateComp)\r\n        const dateToCompare = dateComp\r\n        arr = []\r\n        userData.map(item => {\r\n            if(item.id === idx){\r\n                item.activity_periods.map((item,idx) => {\r\n\r\n                    const dateTypeStart = new Date(item.start_time)\r\n                    const typeDateStart = `${dateTypeStart.toLocaleString('default', { month: 'short' })} ${dateTypeStart.getDate()} ${dateTypeStart.getFullYear()}`\r\n                    const dateTypeEnd = new Date(item.end_time)\r\n                    \r\n                    if(dateToCompare === typeDateStart){\r\n                        let a = dateTypeStart.toLocaleTimeString().replace(/([\\d]+:[\\d]{2})(:[\\d]{2})(.*)/,\"$1$3\")\r\n                        let b = dateTypeEnd.toLocaleTimeString().replace(/([\\d]+:[\\d]{2})(:[\\d]{2})(.*)/,\"$1$3\")\r\n                        arr.push([a,b])\r\n                    }\r\n                    \r\n                })\r\n            }   \r\n        })\r\n        setSingleUserData([arr])\r\n    }\r\n\r\n\r\n    useEffect(()=> {\r\n        if(singleUserData !== null)\r\n        {\r\n                handleOpen()\r\n        }\r\n    },[singleUserData])\r\n\r\n    useEffect(()=>{\r\n        \r\n        if(selectedDate.getTime() === todayDate.getTime()){\r\n            console.log('running')\r\n        }\r\n        else{\r\n            const dateToSend = `${selectedDate.toLocaleString('default', { month: 'short' })} ${selectedDate.getDate()} ${selectedDate.getFullYear()}`;\r\n            getOneUserData(currentID,dateToSend)\r\n            \r\n        }\r\n    },[selectedDate])\r\n\r\n    return (\r\n    <div style={{width:\"40%\"}}>\r\n        <TableContainer component = {Paper}>\r\n            <Table aria-label = \"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell style={{color:\"#3F51B5\",fontSize:\"17px\"}}>Full Name</TableCell>\r\n                        <TableCell style={{color:\"#3F51B5\",fontSize:\"17px\"}}>Place</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        userData.map(row => (\r\n                            <TableRow hover key={row.id} onClick = {()=> { setCurrentID(row.id); getOneUserData(row.id,dateToday)}}>\r\n                                <TableCell>{row.real_name}</TableCell>\r\n                                <TableCell><Chip label={row.tz} color=\"primary\"/></TableCell>\r\n                            </TableRow>\r\n                        ))\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            className={classes.alignItemsAndJustifyContent}\r\n        >\r\n            <div className={classes.paper} style={{padding:0,outline: 'none'}}>\r\n                \r\n                <Container style={{backgroundColor:\"#3F51B5\",fontFamily:\"Roboto\"}}>\r\n                   <div style={{fontSize:\"1rem\",lineHeight:\"1\",fontWeight:\"400\",color:\"rgba(255, 255, 255, 0.54)\",paddingTop:\"20px\"}}>Activity Data</div>\r\n                    <div style={{fontSize:\"2.125rem\",lineHeight:\"2\", fontWeight:\"400\",color:\"white\"}}>{dateToDisplay}</div>\r\n                </Container>\r\n                \r\n                    {/* the calendar */}\r\n                <Box ml={3} mr={3}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-dialog\"\r\n                            label=\"pick date to view data\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            value={selectedDate}\r\n                            onChange={handleDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                            />\r\n                    </MuiPickersUtilsProvider>\r\n                </Box>\r\n                \r\n                \r\n                <div id=\"simple-modal-description\" style={{fontFamily:\"Roboto\"}} >   \r\n                    {\r\n                        ( singleUserData ? (singleUserData[0].length === 0 ? <Box style={{margin:24,color:\"red\"}}>No data available</Box> : \r\n                        <Box ml={3} mr={3} mb={3}>\r\n                                <TableContainer>\r\n                                    <Table className={classes.table} aria-label=\"login logout data\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"left\">Login</TableCell>\r\n                                                <TableCell align=\"left\">Logout</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            \r\n                                        {singleUserData[0].map((item,idx) => (\r\n                                            <TableRow>\r\n                                                \r\n                                                <TableCell align=\"left\">{item[0]}</TableCell>\r\n                                                <TableCell align=\"left\">{item[1]}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </Box>\r\n                        ) : null )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}